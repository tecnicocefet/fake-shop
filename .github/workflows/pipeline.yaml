name: CI/CD Pipeline for Fake Shop

on:
  push:
    branches:
      - main

jobs:
  # Job CI - Build e Push da imagem Docker
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Verify Dockerfile
        run: |
          ls -l ./src/Dockerfile

      - name: Build and push Docker image
        run: |
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/fakeshop:${GITHUB_SHA}"
          docker build -t $IMAGE_TAG ./src
          docker tag $IMAGE_TAG ${{ secrets.DOCKER_USERNAME }}/fakeshop:latest
          docker push $IMAGE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/fakeshop:latest

  # Job CD - Deploy no Kubernetes
  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.24.0'

      - name: Set up kubeconfig using token and certificate
        run: |
          echo "${{ secrets.DO_K8S_CA }}" | base64 -d > ca.crt
          kubectl config set-cluster do-nyc1-k8s-devops \
            --server=https://41129ac3-4d1c-458c-9752-c81dd268c049.k8s.ondigitalocean.com \
            --certificate-authority=ca.crt
          kubectl config set-credentials do-nyc1-k8s-devops-admin --token=${{ secrets.DO_TOKEN }}
          kubectl config set-context do-nyc1-k8s-devops \
            --cluster=do-nyc1-k8s-devops \
            --user=do-nyc1-k8s-devops-admin
          kubectl config use-context do-nyc1-k8s-devops

      - name: Debug Kubeconfig
        run: |
          kubectl config view

      - name: Check Kubernetes cluster
        run: |
          kubectl get nodes

      - name: Verify Kubernetes context
        run: |
          kubectl config current-context

      - name: Replace image tag in manifests dynamically
        run: |
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/fakeshop:${GITHUB_SHA}"
          sed -i "s|image:.*|image: $IMAGE_TAG|g" Kubernetes/deployment.yaml

      - name: Debug deployment.yaml
        run: |
          cat Kubernetes/deployment.yaml

      - name: Verify Kubernetes manifests
        run: |
          ls -l Kubernetes/deployment.yaml Kubernetes/service.yaml

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f Kubernetes/deployment.yaml
          kubectl apply -f Kubernetes/service.yaml

      - name: Debug rollout status
        run: |
          echo "Checking rollout status for deployment fakeshop..."
          kubectl rollout status deployment/fakeshop || kubectl describe deployment fakeshop

      - name: Verify deployment pods
        run: |
          echo "Listing pods for deployment fakeshop..."
          kubectl get pods -l app=fakeshop -o wide || kubectl get pods --all-namespaces

      - name: Show logs from first pod
        run: |
          echo "Retrieving logs from the first pod..."
          POD_NAME=$(kubectl get pods -l app=fakeshop -o jsonpath='{.items[0].metadata.name}' -n default)
          if [ -z "$POD_NAME" ]; then
            echo "No pods found with the label app=fakeshop in default namespace"
            kubectl get pods --all-namespaces
            exit 1
          fi
          kubectl logs $POD_NAME -n default
